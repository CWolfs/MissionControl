using UnityEngine;

using BattleTech.Framework;

namespace MissionControl.ContractTypeBuilders {
  public class GlobalDataBuilder {
    /*
    * Builds a contract objective from the Designer data
    */
    public static ContractObjectiveGameLogic BuildContractObjective(ContractTypeBuilder contractTypeBuilder, string name, string description, string guid, bool isPrimary, bool displayToUser,
      bool forDisplayPurposesOnly, ObjectiveStatus startingStatus, bool mustCompleteAll) {

      ContractObjectiveGameLogic contractObjectiveGameLogic = MissionControl.Instance.EncounterLayerData.gameObject.AddComponent<ContractObjectiveGameLogic>();
      contractObjectiveGameLogic.title = name;
      contractObjectiveGameLogic.description = description;
      contractObjectiveGameLogic.encounterObjectGuid = guid;
      contractObjectiveGameLogic.primary = isPrimary;
      contractObjectiveGameLogic.displayToUser = displayToUser;
      contractObjectiveGameLogic.forDisplayPurposesOnly = forDisplayPurposesOnly;
      contractObjectiveGameLogic.currentObjectiveStatus = startingStatus;
      contractObjectiveGameLogic.mustCompleteAll = mustCompleteAll;

      return contractObjectiveGameLogic;
    }

    /*
    * Builds a contract objective from the contract objective override data from the contract override
    */
    public static ContractObjectiveGameLogic BuildContractObjective(ContractTypeBuilder contractTypeBuilder, ContractObjectiveOverride contractObjectiveOverride) {
      ContractObjectiveGameLogic contractObjectiveGameLogic = MissionControl.Instance.EncounterLayerData.gameObject.AddComponent<ContractObjectiveGameLogic>();
      contractObjectiveGameLogic.title = $"Autogenerated - {contractObjectiveOverride.GetTitle()}";
      contractObjectiveGameLogic.encounterObjectGuid = contractObjectiveOverride.GUID;
      contractObjectiveGameLogic.description = contractObjectiveOverride.GetDescription().ToString();

      return contractObjectiveGameLogic;
    }
  }
}